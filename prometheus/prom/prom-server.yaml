apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: prometheus
  labels:
    app: prometheus
    component: server
    release: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
      component: server
      release: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: server
        release: prometheus
    spec:
      containers:
      - args:
        - --storage.tsdb.retention.time=15d
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        image: prom/prometheus
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: prometheus-server
        ports:
        - containerPort: 9090
          name: 9090tcp2
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
        volumeMounts:
        - mountPath: /etc/config/prometheus.yml
          name: config-volume
          subPath: prometheus.yml
        - mountPath: /etc/config/rules.yml
          name: config-volume
          subPath: rules.yml
        - mountPath: /data
          name: storage-volume
      restartPolicy: Always
      serviceAccount: prometheus-server
      serviceAccountName: prometheus-server
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-server
        name: config-volume
      - emptyDir: {}
        name: storage-volume
